---

- name: install celery
  pip: virtualenv={{ virtualenv_path }} name={{ item }} virtualenv_site_packages=yes
  with_items:
    - celery
    - flower

#- include: copy_scripts.yml
- name: Create the {{ celery_application_name }} log directory
  file: path={{ celery_log_dir }}
        owner={{ celery_user }}
        group={{ celery_group }}
        state=directory
  tags:
    - celery

- name: Create the {{ celery_application_name }} log file
  file: path={{ celery_log_file }}
        owner={{ celery_user }}
        group={{ celery_group }}
        state=touch
  tags:
    - celery

#- include: setup_supervisor.yml

# - name: Check running applications managed by supervisor
#   shell: supervisorctl status
#   register: supervisor_applications
#   tags:
#     - celery
#     - deploy

# - name: Restart the {{ celery_application_name }} app
#   supervisorctl: name={{ celery_application_name }} state=restarted
#   when: supervisor_applications.stdout.find('{{ celery_application_name }}') != -1
#   tags:
#     - celery
#     - deploy