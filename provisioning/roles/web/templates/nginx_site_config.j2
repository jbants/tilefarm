underscores_in_headers on;

upstream tilefarm_web_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

    server unix:/virtualenv/tilefarm/run/gunicorn.sock fail_timeout=0;
}

server {
    listen      80;
    server_name 192.168.33.15; 

    client_max_body_size 4G;
    rewrite_log on;
    access_log /webapps/logs/nginx/nginx_access.log;
    error_log /webapps/logs/nginx/nginx_error.log debug;

    location /static/ {
        alias   /webapps/website/tilefarm/assets/;
    }

    location /media/ {
        alias   /webapps/website/tilefarm/media/;
    }

# See http://andyfiedler.com/blog/using-nginx-to-proxy-tilestache-180/
    location ~ ^\/tiles\/([\w\-]+)\/([\d]+)\/([\d]+)\/([\d]+)\.(png|json|geojson){
        root /webapps/tilefarm/cache;
        set $originaluri /$1/$2/$3/$4.$5;
        
        # 1 char X
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d]).(\w+)" /$1/$2/000/00$3/000/00$4.$5 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d]).(\w+)" /$1/$2/000/00$3/000/0$4.5 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d]).(\w+)" /$1/$2/000/00$3/000/$4.$5 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d])([\d]).(\w+)" /$1/$2/000/00$3/00$4/$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d])([\d]).(\w+)" /$1/$2/000/00$3/0$4/$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d])([\d]).(\w+)" /$1/$2/000/00$3/$4/$5.$6 break;

        # 2 char X
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d]).(\w+)" /$1/$2/000/0$3/000/00$4.$5 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d]).(\w+)" /$1/$2/000/0$3/000/0$4.$5 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d]).(\w+)" /$1/$2/000/0$3/000/$4.$5 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d])([\d]).(\w+)" /$1/$2/000/0$3/00$4/$5.$5 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d])([\d]).(\w+)" /$1/$2/000/0$3/0$4/$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d])([\d]).(\w+)" /$1/$2/000/0$3/$4/$5.$6 break;

        # 3 char X
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d]).(\w+)" /$1/$2/000/$3/000/00$4.$5 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d]).(\w+)" /$1/$2/000/$3/000/0$4.$5 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d]).(\w+)" /$1/$2/000/$3/000/$4.$5 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d])([\d]).(\w+)" /$1/$2/000/$3/00$4/$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d])([\d]).(\w+)" /$1/$2/000/$3/0$4/$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])\/([\d])([\d]).(\w+)" /$1/$2/000/$3/$4/$5.$6 break;

        # 4 char X
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d]).(\w+)" /$1/$2/00$3/$4/000/00$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d]).(\w+)" /$1/$2/00$3/$4/000/0$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d]).(\w+)" /$1/$2/00$3/$4/000/$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d])([\d]).(\w+)" /$1/$2/00$3/$4/00$5/$6.$7 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d])([\d]).(\w+)" /$1/$2/00$3/$4/0$5/$6.$7 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d])([\d]).(\w+)" /$1/$2/00$3/$4/$5/$6.$7 break;

        # 5 char X
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d]).(\w+)" /$1/$2/0$3/$4/000/00$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d]).(\w+)" /$1/$2/0$3/$4/000/0$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d]).(\w+)" /$1/$2/0$3/$4/000/$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d])([\d]).(\w+)" /$1/$2/0$3/$4/00$5/$6.$7 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d])([\d]).(\w+)" /$1/$2/0$3/$4/0$5/$6.$7 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d])([\d]).(\w+)" /$1/$2/0$3/$4/$5/$6.$7 break;

        # 6 char X
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d]).(\w+)" /$1/$2/$3/$4/000/00$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d]).(\w+)" /$1/$2/$3/$4/000/0$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d]).(\w+)" /$1/$2/$3/$4/000/$5.$6 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d])([\d]).(\w+)" /$1/$2/$3/$4/00$5/$6.$7 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d])([\d]).(\w+)" /$1/$2/$3/$4/0$5/$6.$7 break;
        rewrite "^\/tiles\/([\w\-]+)\/([\d]+)\/([\d])([\d])\/([\d])([\d]).(\w+)" /$1/$2/$3/$4/$5/$6.$7 break;

        # Try to serve the file from the disk. If that doesn't work, pass through the request via the proxy
		expires 300s;
        try_files $uri @tilestache;
    }   
    
    location @tilestache {

        # Rewrite back to standard form
        rewrite ^(.*) $originaluri break; 
        add_header X-Static miss;
        proxy_pass http://tilefarm_web_server;
        proxy_set_header Host $http_host;
    }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://tilefarm_web_server;
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root /webapps/website/tilefarm/templates/;
    }
}
